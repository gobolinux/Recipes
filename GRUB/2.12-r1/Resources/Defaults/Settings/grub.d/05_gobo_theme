#!/bin/bash -e

source $pkgdatadir/grub-mkconfig_lib


grubdir=''
if [ -d /System/Kernel/ESP/grub ] ;        then grubdir=/System/Kernel/ESP/grub
elif [ -d /System/Kernel/Boot/efi/grub ] ; then grubdir=/System/Kernel/Boot/efi/grub
elif [ -d /System/Kernel/Boot/grub ] ;     then grubdir=/System/Kernel/Boot/grub
else
  echo "error: no grub config directory found" >&2
  exit 1
fi

grubmoddir=''
if [ -d $grubdir/x86_64-efi ] ; then grubmoddir=$grubdir/x86_64-efi
elif [ -d $grubdir/i386-pc ] ;  then grubmoddir=$grubdir/i386-pc
else
  echo "error: no grub config module directory found" >&2
  exit 1
fi



# this allows desktop-base to override our settings
f=/usr/share/desktop-base/grub_background.sh
if test -e ${f} ; then
  source ${f}
else
  WALLPAPER=$grubdir/images/gobo_splash.png
  COLOR_NORMAL="white/black"
  COLOR_HIGHLIGHT="black/light-gray"
fi


set_mono_theme()
{
    cat << EOF
  set menu_color_normal=white/black
  set menu_color_highlight=black/light-gray
EOF
}


# check for usable backgrounds
use_bg=false
if [ "$GRUB_TERMINAL_OUTPUT" = "gfxterm" ] ; then
  for i in $grubdir/`basename ${WALLPAPER}` ${WALLPAPER} ; do
    if is_path_readable_by_grub $i ; then
      bg=$i
      case ${bg} in
        *.png)          reader=png ;;
        *.tga)          reader=tga ;;
        *.jpg|*.jpeg)   reader=jpeg ;;
      esac
      if test -e $grubmoddir/${reader}.mod ; then
        echo "Found background image: `basename ${bg}`" >&2
        use_bg=true
        break
      fi
    fi
  done
fi

# set the background if possible
if ${use_bg} ; then
  prepare_grub_to_access_device `${grub_probe} --target=device ${bg}`
  cat << EOF
insmod ${reader}
if background_image -m stretch `make_system_path_relative_to_its_root ${bg}` ; then
  set color_normal=${COLOR_NORMAL}
  set color_hightlight=${COLOR_HIGHLIGHT}
else
EOF
fi

# otherwise set a monochromatic theme
if ${use_bg} ; then
  set_mono_theme | sed -e "s/&/  /g"
  echo "fi"
else
  set_mono_theme
fi

